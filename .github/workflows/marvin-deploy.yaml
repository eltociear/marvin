---
name: Build and publish marvin image

on:
  push:
    branches:
      - master

# Limit concurrency by workflow/branch combination.
#
# For builds, pushing additional changes to the
# branch will cancel prior in-progress and pending builds.
#
# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Do not grant jobs any permissions by default
permissions: {}

jobs:
  python_tests:
    env:
      "MARVIN_GITHUB_ACCESS_TOKEN": ${{ secrets.MARVIN_GITHUB_ACCESS_TOKEN }},
      "MARVIN_GITHUB_VALIDATION_TOKEN": ${{ secrets.MARVIN_GITHUB_VALIDATION_TOKEN }},
      "MARVIN_ID": ${{ secrets.MARVIN_ID }},
      "MARVIN_MONDAY_API_TOKEN": ${{ secrets.MARVIN_MONDAY_API_TOKEN }},
      "MARVIN_PUBLIC_SLACK_OAUTH_TOKEN": ${{ secrets.MARVIN_PUBLIC_SLACK_OAUTH_TOKEN }},
      "MARVIN_PUBLIC_SLACK_TOKEN": ${{ secrets.MARVIN_PUBLIC_SLACK_TOKEN }},
      "MARVIN_PUBLIC_SLACK_VALIDATION_TOKEN": ${{ secrets.MARVIN_PUBLIC_SLACK_VALIDATION_TOKEN }},
      "MARVIN_SLACK_OAUTH_TOKEN": ${{ secrets.MARVIN_SLACK_OAUTH_TOKEN }},
      "MARVIN_SLACK_TOKEN": ${{ secrets.MARVIN_SLACK_TOKEN }},
      "MARVIN_SLACK_VALIDATION_TOKEN": ${{ secrets.MARVIN_SLACK_VALIDATION_TOKEN }}
    runs-on: ubuntu-latest
    permissions:
      # required to read from the repo
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: "pip"
          cache-dependency-path: "requirements*.txt"

      - name: Install Marvin
        run: pip install -e .

      - name: Run Tests
        run: pytest -v

  build_push_image:
    runs-on: ubuntu-latest
    permissions:
      # required to read from the repo
      contents: read
      # required to obtain Google Cloud service account credentials
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Get image version
        id: get_image_version
        run: |
          short_sha=$(git rev-parse --short=7 HEAD)
          echo "short_sha=${short_sha}" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=${short_sha}" >> $GITHUB_ENV

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ vars.GHA_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: marvin-general-main@prefect-org-github-actions.iam.gserviceaccount.com

      - name: Configure Google Cloud credential helper
        run: gcloud auth configure-docker --quiet gcr.io

      - name: Build Marvin image
        run: docker build --rm=false -t gcr.io/prefect-marvin/marvin:${{ env.SHORT_SHA }} .

      - name: Push image to gcr.io
        run: docker push gcr.io/prefect-marvin/marvin:${{ env.SHORT_SHA }}

    # this job output is referenced in the `deploy_marvin` job
    # but sourced from the `get_image_version` step above
    outputs:
      image_tag: ${{ steps.get_image_version.outputs.short_sha }}

  deploy_marvin:
    needs: [build_push_image]
    runs-on: ubuntu-latest
    permissions:
      # required to read from the repo
      contents: read
      # required to obtain Google Cloud service account credentials
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ vars.GHA_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: marvin-general-main@prefect-org-github-actions.iam.gserviceaccount.com

      - name: Configure Google Cloud credential helper
        run: gcloud auth configure-docker --quiet gcr.io

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ vars.CLUSTER_NAME }}
          location: ${{ vars.GKE_REGION }}

      - name: Set K8s Context
        run: |
          kubectl config set-context --current --namespace=marvin

      - name: Update K8s Secrets
        run: |
          echo -n ${{ secrets.MARVIN_MONDAY_API_TOKEN }} > marvinmondayapitoken.txt
          kubectl delete secret marvinmondayapitoken --ignore-not-found
          kubectl create secret generic marvinmondayapitoken --from-file=./marvinmondayapitoken.txt
          echo -n ${{ secrets.MARVIN_GITHUB_VALIDATION_TOKEN }} > marvingithubvalidationtoken.txt
          kubectl delete secret marvingithubvalidationtoken --ignore-not-found
          kubectl create secret generic marvingithubvalidationtoken --from-file=./marvingithubvalidationtoken.txt
          echo -n ${{ secrets.MARVIN_GITHUB_ACCESS_TOKEN }} > marvingithubaccesstoken.txt
          kubectl delete secret marvingithubaccesstoken --ignore-not-found
          kubectl create secret generic marvingithubaccesstoken --from-file=./marvingithubaccesstoken.txt
          echo -n ${{ secrets.MARVIN_SLACK_TOKEN }} > marvinslacktoken.txt
          kubectl delete secret marvinslacktoken --ignore-not-found
          kubectl create secret generic marvinslacktoken --from-file=./marvinslacktoken.txt
          echo -n ${{ secrets.MARVIN_SLACK_OAUTH_TOKEN }} > marvinslackoauthtoken.txt
          kubectl delete secret marvinslackoauthtoken --ignore-not-found
          kubectl create secret generic marvinslackoauthtoken --from-file=./marvinslackoauthtoken.txt
          echo -n ${{ secrets.MARVIN_SLACK_VALIDATION_TOKEN }} > marvinslackvalidationtoken.txt
          kubectl delete secret marvinslackvalidationtoken --ignore-not-found
          kubectl create secret generic marvinslackvalidationtoken --from-file=./marvinslackvalidationtoken.txt
          echo -n ${{ secrets.MARVIN_PUBLIC_SLACK_VALIDATION_TOKEN }} > marvinpublicslackvalidationtoken.txt
          kubectl delete secret marvinpublicslackvalidationtoken --ignore-not-found
          kubectl create secret generic marvinpublicslackvalidationtoken --from-file=./marvinpublicslackvalidationtoken.txt
          echo -n ${{ secrets.MARVIN_PUBLIC_SLACK_OAUTH_TOKEN }} > marvinpublicslackoauthtoken.txt
          kubectl delete secret marvinpublicslackoauthtoken --ignore-not-found
          kubectl create secret generic marvinpublicslackoauthtoken --from-file=./marvinpublicslackoauthtoken.txt
          echo -n ${{ secrets.MARVIN_PUBLIC_SLACK_TOKEN }} > marvinpublicslacktoken.txt
          kubectl delete secret marvinpublicslacktoken --ignore-not-found
          kubectl create secret generic marvinpublicslacktoken --from-file=./marvinpublicslacktoken.txt
          echo -n ${{ secrets.GITHUB_SHA }} > gitsha.txt
          kubectl delete secret gitsha --ignore-not-found
          kubectl create secret generic gitsha --from-file=./gitsha.txt
          echo -n ${{ secrets.MARVIN_ID }} > marvinid.txt
          kubectl delete secret marvinid --ignore-not-found
          kubectl create secret generic marvinid --from-file=./marvinid.txt

      - name: Deploy Marvin
        run: |
          kubectl apply -f kubernetes/service-account.yaml
          sed -i  "s/\${IMAGE_TAG}/${{ needs.build_push_image.outputs.image_tag }}/g" kubernetes/deployment.yaml
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/managedcert.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl apply -f kubernetes/ingress.yaml
