aliases:
  - &configure_google_cloud

  - &install_docker
    run:
      name: Install Docker client
      command: |
        set -x
        VER="18.09.3"
        curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
        tar -xz -C /tmp -f /tmp/docker-$VER.tgz
        mv /tmp/docker/* /usr/bin

setup_gcloud_sdk: &setup_gcloud_sdk
  name: Set up Google Cloud SDK
  command: |
    echo "$GOOGLE_SERVICE_ACCOUNT_KEY" > key.json
    gcloud auth activate-service-account --key-file key.json
    gcloud config set project $GCLOUD_PROJECT
    gcloud config set compute/zone $GCLOUD_ZONE
    gcloud config set compute/region $GCLOUD_REGION

version: 2
jobs:
  test:
    docker:
      - image: python:3.10

    steps:
      - checkout
      - run:
          name: Set Google credentials
          command: |
            echo "$GOOGLE_SERVICE_ACCOUNT_KEY" > key.json
            echo 'export GOOGLE_APPLICATION_CREDENTIALS=key.json' >> $BASH_ENV
      - run:
          name: Install Marvin
          command: |
            pip install -e .
      - run:
          name: Test Marvin
          command: |
            pytest -v

  build:
    docker:
      - image: google/cloud-sdk

    steps:
      - checkout
      - run: *setup_gcloud_sdk
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            gcloud auth configure-docker
            docker build -t gcr.io/$GCLOUD_PROJECT/marvin:$CIRCLE_SHA1 .
      - run:
          name: Push Docker image
          command: docker push gcr.io/$GCLOUD_PROJECT/marvin:$CIRCLE_SHA1

  deploy:
    docker:
      - image: google/cloud-sdk

    steps:
      - checkout
      - run: *setup_gcloud_sdk
      - run: gcloud container clusters get-credentials $GCLOUD_GKE_CLUSTER --region=$GCLOUD_REGION
      - run:
          name: Change default namespace to 'marvin'
          command: kubectl config set-context --current --namespace=marvin
      - run:
          name: Add Secrets to Kubernetes
          command: |
            echo -n "$MARVIN_MONDAY_API_TOKEN" > marvinmondayapitoken.txt
            kubectl delete secret marvinmondayapitoken --ignore-not-found
            kubectl create secret generic marvinmondayapitoken --from-file=./marvinmondayapitoken.txt
            echo -n "$MARVIN_GITHUB_VALIDATION_TOKEN" > marvingithubvalidationtoken.txt
            kubectl delete secret marvingithubvalidationtoken --ignore-not-found
            kubectl create secret generic marvingithubvalidationtoken --from-file=./marvingithubvalidationtoken.txt
            echo -n "$MARVIN_GITHUB_ACCESS_TOKEN" > marvingithubaccesstoken.txt
            kubectl delete secret marvingithubaccesstoken --ignore-not-found
            kubectl create secret generic marvingithubaccesstoken --from-file=./marvingithubaccesstoken.txt
            echo -n "$MARVIN_SLACK_TOKEN" > marvinslacktoken.txt
            kubectl delete secret marvinslacktoken --ignore-not-found
            kubectl create secret generic marvinslacktoken --from-file=./marvinslacktoken.txt
            echo -n "$MARVIN_SLACK_OAUTH_TOKEN" > marvinslackoauthtoken.txt
            kubectl delete secret marvinslackoauthtoken --ignore-not-found
            kubectl create secret generic marvinslackoauthtoken --from-file=./marvinslackoauthtoken.txt
            echo -n "$MARVIN_SLACK_VALIDATION_TOKEN" > marvinslackvalidationtoken.txt
            kubectl delete secret marvinslackvalidationtoken --ignore-not-found
            kubectl create secret generic marvinslackvalidationtoken --from-file=./marvinslackvalidationtoken.txt
            echo -n "$MARVIN_PUBLIC_SLACK_VALIDATION_TOKEN" > marvinpublicslackvalidationtoken.txt
            kubectl delete secret marvinpublicslackvalidationtoken --ignore-not-found
            kubectl create secret generic marvinpublicslackvalidationtoken --from-file=./marvinpublicslackvalidationtoken.txt
            echo -n "$MARVIN_PUBLIC_SLACK_OAUTH_TOKEN" > marvinpublicslackoauthtoken.txt
            kubectl delete secret marvinpublicslackoauthtoken --ignore-not-found
            kubectl create secret generic marvinpublicslackoauthtoken --from-file=./marvinpublicslackoauthtoken.txt
            echo -n "$MARVIN_PUBLIC_SLACK_TOKEN" > marvinpublicslacktoken.txt
            kubectl delete secret marvinpublicslacktoken --ignore-not-found
            kubectl create secret generic marvinpublicslacktoken --from-file=./marvinpublicslacktoken.txt
            echo -n "$CIRCLE_SHA1" > gitsha.txt
            kubectl delete secret gitsha --ignore-not-found
            kubectl create secret generic gitsha --from-file=./gitsha.txt
            echo -n "$MARVIN_ID" > marvinid.txt
            kubectl delete secret marvinid --ignore-not-found
            kubectl create secret generic marvinid --from-file=./marvinid.txt
      - run:
          name: Deploy Marvin
          command: |
            kubectl apply -f kubernetes/service-account.yaml
            sed -i  "s/\${IMAGE_TAG}/$CIRCLE_SHA1/g" kubernetes/deployment.yaml
            kubectl apply -f kubernetes/deployment.yaml
            kubectl apply -f kubernetes/managedcert.yaml
            kubectl apply -f kubernetes/service.yaml
            kubectl apply -f kubernetes/ingress.yaml


workflows:
  version: 2

  build_and_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: master

      - deploy:
          requires:
            - build
