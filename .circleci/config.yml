setup_gcloud_sdk: &setup_gcloud_sdk
  name: Set up Google Cloud SDK
  command: |
    echo "$GOOGLE_SERVICE_ACCOUNT_KEY" > key.json
    gcloud auth activate-service-account --key-file key.json
    gcloud config set compute/zone $GCLOUD_ZONE
    gcloud config set project $GCLOUD_PROJECT

version: 2
jobs:
  test:
    docker:
      - image: python:3.6

    steps:
      - checkout
      - run:
          name: Set Google credentials
          command: |
            echo "$GOOGLE_SERVICE_ACCOUNT_KEY" > key.json
            echo 'export GOOGLE_APPLICATION_CREDENTIALS=key.json' >> $BASH_ENV
      - run:
          name: Install Marvin
          command: |
            pip install .
      - run:
          name: Test Marvin
          command: |
            pytest -v

  build:
    docker:
      - image: google/cloud-sdk

    steps:
      - checkout
      - run: *setup_gcloud_sdk
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            gcloud auth configure-docker
            docker build -t gcr.io/$GCLOUD_PROJECT/marvin:$CIRCLE_SHA1 .
      - run:
          name: Push Docker image
          command: docker push gcr.io/$GCLOUD_PROJECT/marvin:$CIRCLE_SHA1

  deploy:
    docker:
      - image: google/cloud-sdk

    steps:
      - checkout
      - run: *setup_gcloud_sdk
      - run: gcloud container clusters get-credentials $GCLOUD_GKE_CLUSTER
      - run:
          name: Add Slack token to Kubernetes
          command: |
            echo -n "$PREFECT__CLOUD__AUTH_TOKEN" > prefectauthtoken.txt
            kubectl delete secret prefectauthtoken --ignore-not-found
            kubectl create secret generic prefectauthtoken --from-file=./prefectauthtoken.txt
            echo -n "$GITHUB_VALIDATION_TOKEN" > githubvalidationtoken.txt
            kubectl delete secret githubvalidationtoken --ignore-not-found
            kubectl create secret generic githubvalidationtoken --from-file=./githubvalidationtoken.txt
            echo -n "$MARVIN_ACCESS_TOKEN" > marvinaccesstoken.txt
            kubectl delete secret marvinaccesstoken --ignore-not-found
            kubectl create secret generic marvinaccesstoken --from-file=./marvinaccesstoken.txt
            echo -n "$SLACK_TOKEN" > slacktoken.txt
            kubectl delete secret slacktoken --ignore-not-found
            kubectl create secret generic slacktoken --from-file=./slacktoken.txt
            echo -n "$SLACK_OAUTH_TOKEN" > slackoauthtoken.txt
            kubectl delete secret slackoauthtoken --ignore-not-found
            kubectl create secret generic slackoauthtoken --from-file=./slackoauthtoken.txt
            echo -n "$SLACK_VALIDATION_TOKEN" > slackvalidationtoken.txt
            kubectl delete secret slackvalidationtoken --ignore-not-found
            kubectl create secret generic slackvalidationtoken --from-file=./slackvalidationtoken.txt
            echo -n "$CIRCLE_SHA1" > gitsha.txt
            kubectl delete secret gitsha --ignore-not-found
            kubectl create secret generic gitsha --from-file=./gitsha.txt
      - run:
          name: Deploy Marvin
          command: |
            sed -i  "s/\${IMAGE_TAG}/$CIRCLE_SHA1/g" kubernetes/deployment.yml
            kubectl apply -f kubernetes/deployment.yml

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: master

      - deploy:
          requires:
            - build
